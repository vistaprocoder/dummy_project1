*,
*::before,
*::after {
    /* using the universal selector here */
    padding: 0;
    box-sizing: border-box;
    margin: 0;
    font-family: 'League Spartan',sans-serif;
}
:root{
    --dk-violet:hsl(268,75%,9%);
    --lt-violet:hsl(268,47%,21%);
    --lt-violet2:hsl(281,89%,26%);
    --vb-violet:hsl(285,91%,52%);
    --vb-violet2:hsl(290,70%,36%);
    --vb-yellow:hsl(52,100%,62%);
    --pl-white:hsl(0,0%,100%);
    --vb-cyan:hsl(176,100%,44%);
    --vb-cyan2:hsl(177,92%,70%);
    --dk-text:hsl(198,20%,13%);
}
/* these are known as the global variables can be accessed by any feature */
body{
    /* max width ki jagah only use the width here */
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background: linear-gradient(231deg,rgba(22,6,40,1) 0%,rgba(52,28,79,1) 50%,rgba(88,7,125,1) 100%);
    /* if u want to generate your own gradient then u can do it by the help of the angry tools */
}
.container{
    width: 450px;
    height: 90%;

}
h1{
   color: var(--pl-white); 
   opacity: 0.75;
   text-align: center;
   font-size: 25px;
   letter-spacing: 2px;
   line-height: 1.2;

}
.display-container{
    position: relative;
    /* because i have to overlap somethings in future */
    /* display: flex; */
    background-color: var(--dk-violet);
    border-radius: 1rem;
    border-bottom: 0.35rem solid var(--lt-violet2);
    margin: 1rem 0;
    padding-top: 0.35rem;
    /* width: 260px; */
    /* height:40px; */
    display: flex;
    /* justify-content: center; */
    /* align-items: center; */

}
.display{
    width: 100%;
    background-color: transparent;
    padding: 1.15rem 1rem;
    color: var(--vb-yellow);
    font-weight: 600;
    font-size: 1.5rem;
    border: none;
    line-height: 30px;
    letter-spacing: 1px;
    padding-right: 3.25rem;
}
.display::placeholder{
    position: absolute;
    top: 50%;
    font-size: 1.5rem;
    left: 1.5rem;
    line-height: 30px;
    color:var(--vb-yellow);
    opacity: 0.65;
    transform: translateY(-50%);
}
.display-container button{
    position: absolute;
    top: 50%;
    right: 1.5rem;
    transform: translateY(-50%);
}
.input-container{
    background-color: var(--dk-violet);
    border-radius: 1rem;
    width: 100%;
    padding: 2rem;
    border-bottom: 0.35rem solid var(--lt-violet2);
}
.length-container{
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    margin-top: 1.75rem;
    margin-bottom: 2rem;
}
.length-container p:nth-child(1) {
    /* this means that nth child here is the 1st child */
    color: var(--pl-white) ;
    font-size: 1.5rem;

}
.length-container p:nth-child(2) {
    /* this means that nth child here is the 1st child */
    color: var(--vb-yellow) ;
    font-size: 1.5rem;

}
.strength-container{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    margin-top: 1.75rem;
    margin-bottom: 2rem;
}
.strength-container p:nth-child(1){
    color: var(--pl-white);
    font-size: 25px;
}
.indicator{
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    
}
.generateButton{
    background-color: var(--vb-violet);
    color: var(--vb-yellow);
    font-weight: 600;
    text-align: center;
    cursor: pointer;
    width: 100%;
    padding: 1rem 0;
    border-radius: 0.75rem;
    border-bottom: 0.35rem solid var(--vb-yellow);
    text-transform: uppercase;
    letter-spacing: 1px;
    font-size: 1.25rem;

}
/* every check box is lies inside the one of the div here */
.check{
    display: flex;
    align-items: center;
    margin: 1rem 0;
    gap: 0 1rem;
}
.check input{
    appearance: none;
    width: 20px;
    height: 20px;
    border: 1px solid var(--vb-cyan);
    cursor: pointer;
    position: relative;
    border-radius: 4px;
}
.check input:checked{
    background-color: var(--vb-cyan);
}
.check input:checked::before{
    /* this is known as the pseudo selector here */
    content: 'âœ”';
    position: absolute;
    color: var(--dk-text);
    font-size: 1.05rem;
    font-weight: 600;
    left: 50%;
    top: -0.7rem;
    transform: translateX(-50%) translateY(40%);
    
}
.check label{
    color: var(--pl-white);
    font-size: 1.25rem;
    letter-spacing: 0.75px;
}
.slider{
    appearance: none;
    width: 100%;
    cursor: pointer;
    background-color: var(--lt-violet);
    border-radius: 1rem;
    margin-top: 2rem;
    margin-bottom: 1.5rem;
    background-image: linear-gradient(var(--vb-violet),var(--vb-violet));
    height: 0.75rem;
    background-repeat: no-repeat;
    border: none;
    outline: none;
}
/* if i want to access the pointer of the slider then i will have to use the psedo thumb slider here */
.slider::-webkit-slider-thumb{
    /* if u create a slider and u want to access the slider this is the only method to access the slider here */
    appearance: none;
    height: 2rem;
    position: relative;
    width: 2rem;
    border-radius:50% ;
    cursor: pointer;
    background-color: var(--vb-yellow);
    margin-top: -3px;
    box-shadow: 0px 0px 20px 0px rgba(255,229,61,0.50);
    transition: all 100ms ease-in;
}
.slider:focus{
    outline: 3px solid var(--vb-yellow);
}
.slider::-webkit-slider-thumb:hover{
    outline: 2px solid var(--vb-yellow);
    background-color: var(--dk-violet);
    box-shadow: 0px 0px 25px 5px rgba(255,229,61,0.80);
    
}
.copyBtn{
    background-color: transparent;
    border: none;


}
.tooltip{
    position: absolute;
    background-color: var(--vb-violet);
    color: var(--vb-yellow);
    font-size: 1.25rem;
    top: -35px;
    left: -25px;
    padding: 5px 10px;
    border-radius: 1rem;
    opacity: 0;
    transform: scale(0);
    transform-origin: bottom;
    transition: all 250ms ease-in-out;
}
.tooltip.active{
    opacity: 1;
    transform: scale(1);
}